server.port=8082
spring.application.name=api-gateway

spring.cloud.gateway.routes[0].id=user-info
spring.cloud.gateway.routes[0].uri=lb://customer-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/customer/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/customer/(?<segment>.*),/$\{segment}

spring.cloud.kubernetes.enabled=true
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

logging.level.root: DEBUG
logging.level.org.springframework.gateway: TRACE
logging.level.org.springframework.cloud.gateway: TRACE
logging.level.org.springframework.cloud.loadbalancer: TRACE

management.endpoint.health.enabled=true
management.endpoint.health.probes.enabled=true

spring.cloud.kubernetes.config.namespace=default
spring.cloud.kubernetes.reload.enabled=true


spring.cloud.kubernetes.config.name=demo
spring.cloud.kubernetes.config.enabled=true
spring.cloud.kubernetes.reload.monitoring-config-maps=true
spring.cloud.kubernetes.reload.strategy=refresh
spring.cloud.kubernetes.reload.mode=event
management.endpoint.refresh.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.restart.enabled=true

spring.zipkin.baseUrl=http://zipkin:9411/
#spring.sleuth.traceId128=true
spring.sleuth.sampler.probability=1.0
# Adds trace and span IDs to logs (when a trace is in progress)
logging.pattern.level=[%X{traceId}/%X{spanId}] %-5p [%t] %C{2} - %m%n
# Propagates a field named 'user_name' downstream
# Note: In sleuth 3.x it is spring.sleuth.baggage.remote-fields=user_name
#spring.sleuth.baggage.remote-fields=user_name